// Code generated by protoc-gen-nitro. DO NOT EDIT.
// source: proto/tosui/tosui.proto

package tosui

import (
	fmt "fmt"
	common "github.com/awatercolorpen/nitro-playground/proto/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	client "github.com/asim/nitro/v3/client"
	server "github.com/asim/nitro/v3/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ToSui service

type ToSuiService interface {
	Call(ctx context.Context, in *common.Request, opts ...client.CallOption) (*common.Response, error)
}

type toSuiService struct {
	c    client.Client
	name string
}

func NewToSuiService(name string, c client.Client) ToSuiService {
	return &toSuiService{
		c:    c,
		name: name,
	}
}

func (c *toSuiService) Call(ctx context.Context, in *common.Request, opts ...client.CallOption) (*common.Response, error) {
	req := c.c.NewRequest(c.name, "ToSui.Call", in)
	out := new(common.Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ToSui service

type ToSuiHandler interface {
	Call(context.Context, *common.Request, *common.Response) error
}

func RegisterToSuiHandler(s server.Server, hdlr ToSuiHandler, opts ...server.HandlerOption) error {
	type toSui interface {
		Call(ctx context.Context, in *common.Request, out *common.Response) error
	}
	type ToSui struct {
		toSui
	}
	h := &toSuiHandler{hdlr}
	return s.Handle(s.NewHandler(&ToSui{h}, opts...))
}

type toSuiHandler struct {
	ToSuiHandler
}

func (h *toSuiHandler) Call(ctx context.Context, in *common.Request, out *common.Response) error {
	return h.ToSuiHandler.Call(ctx, in, out)
}
